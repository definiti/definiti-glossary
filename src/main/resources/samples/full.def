package first

/** This alias represents an alias of a string */
type SimpleAliasType = String

/**
 * This type represents a simple type for example
 */
type SimpleDefinedType {
  aliasString: SimpleAliasType
  string: String
  nonEmpty: String verifying NonEmptyString
}

// Normal line comments are ignored
type EmptyAliasType = String

/*
 * Normal block comments are ignored
 */
type EmptyDefinedType {
  number: Number
}

/**
 * This type is written using markdown.
 * So you can use:
 * - list
 * - *italic*
 * - **bold**
 *
 * A simple use of this type could be as follow:
 * ```
 * Some code here
 * ```
 *
 * And of course, do any other thing you want!
 *
 * This project use [txtmark](https://github.com/rjeschke/txtmark) for markdown processing
 */
type MarkdownType = String

/**
 * Checks the string is non empty.
 * The non-emptiness does not ignore whitespaces.
 */
verification NonEmptyString {
  "The string should not be empty"
  (string: String) => {
    string.nonEmpty()
  }
}

verification NonEmptyList {
  message("non.empty.list", String)
  [A](list: List[A]) => {
    if (list.nonEmpty()) {
      ok
    } else {
      ko("Some text")
    }
  }
}

/**
 * A day of gregorian calendar.
 */
enum Day {
  Monday Tuesday Wednesday Thursday Friday Saturday Sunday
}